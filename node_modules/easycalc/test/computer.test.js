"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const computer_1 = require("../lib/computer");
describe("computer", () => {
    it("computes positive", () => {
        const computer = new computer_1.Computer();
        const expected = "42";
        const actual = computer.compute("42").toString();
        chai_1.assert.equal(actual, expected);
    });
    it("computes negative constants", () => {
        const computer = new computer_1.Computer();
        const expected = "-42";
        const actual = computer.compute("-42").toString();
        chai_1.assert.equal(actual, expected);
    });
    it("computes complex expressions", () => {
        const computer = new computer_1.Computer();
        const expression = "2 + 2 * 2 - (14/7-3)";
        const expected = "7";
        const actual = computer.compute(expression).toString();
        chai_1.assert.equal(actual, expected);
    });
    it("saves values into memory", () => {
        const computer = new computer_1.Computer();
        const assignment = "a = 42";
        const request = "a";
        const expected = "42";
        computer.compute(assignment);
        const actual = computer.compute(request).toString();
        chai_1.assert.equal(actual, expected);
    });
    it("saves last computation", () => {
        const computer = new computer_1.Computer();
        const expression = "42";
        const request = "_";
        const expected = "42";
        computer.compute(expression);
        const actual = computer.compute(request).toString();
        chai_1.assert.equal(actual, expected);
    });
    it("caches constants", () => {
        const computer = new computer_1.Computer();
        const expression = "42";
        computer.compute(expression);
        chai_1.assert.equal(computer.cached["42"].toString(), "42");
    });
});
//# sourceMappingURL=computer.test.js.map